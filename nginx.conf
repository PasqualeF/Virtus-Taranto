server {
    listen 80;
    server_name whoelseorange.it;

    # Reindirizza tutto su HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name whoelseorange.it;

    # SSL certificate (certificati generati da Duck DNS)
    ssl_certificate     /etc/letsencrypt/live/whoelseorange.it/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/whoelseorange.it/privkey.pem;

    # Configurazione SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    root /usr/share/nginx/html;
    index index.html;

     location /uploads/ {
    proxy_pass http://195.201.238.79:1337;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
}
    # Proxy per le API calls - Strapi
    location /api/ {
        
        
        proxy_pass http://195.201.238.79:1337/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "$scheme://$host" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "$scheme://$host";
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }

   # Proxy per Web application - Backend Web
    location /Web/ {
        proxy_pass http://195.201.238.79:4344;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    
    # Supporto per WebSockets se necessario
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    
    # CORS headers se necessario
        add_header Access-Control-Allow-Origin "$scheme://$host" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "$scheme://$host";
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }
}

    # Serve i file statici dell'app Angular
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache per HTML (pi√π breve)
        location ~* \.(?:html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }

    # Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_min_length 256;
    gzip_types 
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/font-woff
        application/font-woff2;

    # Cache static assets con hash nei nomi (es. main.abc123.js)
    location ~* ^(?!/uploads/).*\.(?:js|css|woff2?|eot|ttf|otf|svg|jpg|jpeg|gif|png|webp|ico)$ {

    expires 1y;
    access_log off;
    add_header Cache-Control "public, immutable";
}

    # Sicurezza: header base
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Frame-Options DENY always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # Timeout connection (anti-DDOS)
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;

    # Max size richieste
    client_max_body_size 2M;

    # Log
    access_log /var/log/nginx/virtus_access.log;
    error_log  /var/log/nginx/virtus_error.log;
}